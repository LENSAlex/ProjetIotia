create or replace table Site(
	id_site INTEGER PRIMARY KEY AUTO_INCREMENT,
	nom VARCHAR(50) NOT NULL);
	
CREATE OR REPLACE TABLE Batiment(
	id_batiment INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_site INTEGER NOT NULL,
	nom VARCHAR(50) NOT NULL,
	surface INTEGER NOT NULL,
	CONSTRAINT FK_Batiment1
    FOREIGN KEY (id_site)
    REFERENCES Site (id_site)
	);

CREATE OR REPLACE TABLE Etage(
	id_etage INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_batiment INTEGER NOT NULL,
	num VARCHAR(5) NOT NULL,
	surface INTEGER NOT NULL,
	CONSTRAINT FK_Etage1 
    FOREIGN KEY (id_batiment)
    REFERENCES Batiment (id_batiment)
	);

CREATE OR REPLACE TABLE Salle(
	id_salle INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_etage INTEGER NOT NULL,
	capacite_max INTEGER NOT NULL,
	surface INTEGER NOT NULL,
	volume INTEGER NOT NULL,
	CONSTRAINT FK_Salle1 
    FOREIGN KEY (id_etage)
    REFERENCES Etage (id_etage)
	);
	
CREATE OR REPLACE TABLE AccessibiliteType(
	id_accessibilite INTEGER PRIMARY KEY AUTO_INCREMENT,
	acces_prof SMALLINT  NOT NULL,
	acces_eleve SMALLINT  NOT NULL,
	acces_entretien SMALLINT  NOT NULL,
	acces_administratif SMALLINT  NOT NULL
	);
	
CREATE OR REPLACE TABLE AccesSite(
	id_site INTEGER NOT NULL,
	id_accessibilite INTEGER NOT NULL,
	seuil_presence INTEGER NOT NULL,
	date_debut DATETIME NOT NULL,
	date_fin DATETIME,
	CONSTRAINT FK_AccesSite1 
    FOREIGN KEY (id_site)
    REFERENCES Site (id_site),
	CONSTRAINT FK_AccesSite2
	FOREIGN KEY (id_accessibilite)
    REFERENCES AccessibiliteType (id_accessibilite)
	);

CREATE OR REPLACE INDEX ind_AccesSite 
ON AccesSite (id_site, date_debut, date_fin);

CREATE OR REPLACE TABLE AccesBatiment(
	id_batiment INTEGER NOT NULL,
	id_accessibilite INTEGER NOT NULL,
	seuil_presence INTEGER NOT NULL,
	date_debut DATETIME NOT NULL,
	date_fin DATETIME,
	CONSTRAINT FK_AccesBatiment1 
    FOREIGN KEY (id_batiment)
    REFERENCES Batiment (id_batiment),
	CONSTRAINT FK_AccesBatiment2
	FOREIGN KEY (id_accessibilite)
    REFERENCES AccessibiliteType (id_accessibilite)
	);

CREATE OR REPLACE INDEX ind_AccesBatiment 
ON AccesBatiment (id_batiment, date_debut, date_fin);

CREATE OR REPLACE TABLE AccesEtage(
	id_etage INTEGER NOT NULL,
	id_accessibilite INTEGER NOT NULL,
	seuil_presence INTEGER NOT NULL,
	date_debut DATETIME NOT NULL,
	date_fin DATETIME,
	CONSTRAINT FK_AccesEtage1
    FOREIGN KEY (id_etage)
    REFERENCES Etage (id_etage),
	CONSTRAINT FK_AccesEtage2
	FOREIGN KEY (id_accessibilite)
    REFERENCES AccessibiliteType (id_accessibilite)
	);

CREATE OR REPLACE INDEX ind_AccesEtage 
ON AccesEtage (id_etage, date_debut, date_fin);

CREATE OR REPLACE TABLE AccesSalle(
	id_salle INTEGER NOT NULL,
	id_accessibilite INTEGER NOT NULL,
	seuil_presence INTEGER NOT NULL,
	date_debut DATETIME NOT NULL,
	date_fin DATETIME,
	CONSTRAINT  FK_AccesSalle1
    FOREIGN KEY (id_salle)
    REFERENCES Salle (id_salle),
	CONSTRAINT FK_AccesSalle2
	FOREIGN KEY (id_accessibilite)
    REFERENCES AccessibiliteType (id_accessibilite)
	);
	
CREATE OR REPLACE INDEX ind_AccesSalle 
ON AccesSalle (id_salle, date_debut, date_fin);

CREATE OR REPLACE TABLE Equipement(
	id_equipement INTEGER PRIMARY KEY AUTO_INCREMENT,
	libelle VARCHAR(50) NOT NULL,
	description VARCHAR(250),
	equipement_type VARCHAR(50) NOT NULL
	);
	
CREATE OR REPLACE TABLE Penurie(
	id_equipement INTEGER NOT NULL,
	id_salle INTEGER NOT NULL,
	is_penurie SMALLINT,
	date_maj DATETIME NOT NULL,
	CONSTRAINT FK_Penurie1
    FOREIGN KEY  (id_equipement)
    REFERENCES Equipement (id_equipement),
	CONSTRAINT FK_Penurie2
	FOREIGN KEY (id_salle)
    REFERENCES Salle (id_salle),
	CONSTRAINT PK_Penurie
	PRIMARY KEY (id_equipement, id_salle)
	);

CREATE OR REPLACE INDEX ind_Penurie 
ON Penurie (id_equipement, id_salle, date_maj);
	
CREATE OR REPLACE TABLE ValueType (
	id_valuetype INTEGER PRIMARY KEY AUTO_INCREMENT,
	libelle VARCHAR(50) NOT NULL,
	unite VARCHAR(10)
	);

CREATE OR REPLACE TABLE DeviceType (
	id_devicetype INTEGER PRIMARY KEY AUTO_INCREMENT,
	libelle_type VARCHAR(50) NOT NULL,
	description VARCHAR(250),
	reference VARCHAR(200) NOT NULL
	);
	
CREATE OR REPLACE TABLE Box (
	id_box INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_salle INTEGER NOT NULL,
	id_devicetype INTEGER NOT NULL,
	adr_mac VARCHAR(50),
	adr_ip VARCHAR(50),
	libelle VARCHAR(50) NOT NULL,
	description VARCHAR(250),
	date_installation DATETIME NOT NULL,
	CONSTRAINT FK_Box1
	FOREIGN KEY (id_salle)
	REFERENCES Salle (id_salle),
	CONSTRAINT FK_Box2
	FOREIGN KEY (id_devicetype)
	REFERENCES DeviceType (id_devicetype),
	);
	
CREATE OR REPLACE INDEX ind_Box 
ON Box (id_box, id_salle, date_installation);

CREATE OR REPLACE TABLE Alerte (
	id_alerte INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_box INTEGER NOT NULL,
	libelle VARCHAR(50) NOT NULL,
	description VARCHAR(250),
	date_alerte DATETIME NOT NULL,
	CONSTRAINT FK_Alerte1
	FOREIGN KEY (id_box)
	REFERENCES Box (id_box)
	);
	
CREATE OR REPLACE INDEX ind_Alerte 
ON Alerte (id_alerte, id_box, date_alerte);
	
	
CREATE OR REPLACE TABLE Device (
	id_device INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_box INTEGER NOT NULL,
	id_devicetype INTEGER NOT NULL,
	id_valuetype INTEGER NOT NULL,
	seuil_min DECIMAL (15,5),
	seuil_max DECIMAL (15,5),
	CONSTRAINT FK_Device1
	FOREIGN KEY (id_box)
	REFERENCES Box (id_box),
	CONSTRAINT FK_Device2
	FOREIGN KEY (id_deviceType)
	REFERENCES DeviceType (id_deviceType),
	CONSTRAINT FK_Device3
	FOREIGN KEY (id_ValueType)
	REFERENCES ValueType (id_ValueType)
	);
	
CREATE OR REPLACE TABLE Historique (
	id_historique INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_box INTEGER NOT NULL,
	id_valuetype INTEGER NOT NULL,
	valeur DECIMAL (15,5) NOT NULL,
	date_historique DATETIME NOT NULL,
	CONSTRAINT FK_Historique1
	FOREIGN KEY (id_box)
	REFERENCES Box (id_box),
	CONSTRAINT FK_Historique2
	FOREIGN KEY (id_ValueType)
	REFERENCES ValueType (id_ValueType)
	);

CREATE OR REPLACE INDEX ind_Historique 
ON Historique (id_historique, id_box, date_historique);

CREATE OR REPLACE TABLE Departement
(
	id_departement INTEGER PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(50)
);
CREATE INDEX ind_Departement ON Departement (id_departement);

CREATE OR REPLACE TABLE Formation
(
	id_formation 	INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_departement 	INTEGER NOT NULL, 
	nom 			VARCHAR(50), 
	duree 			INTEGER NOT NULL,
	
	CONSTRAINT FK_Formation_Department FOREIGN KEY (id_departement) REFERENCES (id_departement)
);
CREATE INDEX ind_Formation ON Formation (id_formation, id_departement); 

CREATE OR REPLACE TABLE PersonneType
(
	id_pers_type 		INTEGER PRIMARY KEY AUTO_INCREMENT, 
	libelle				VARCHAR(50) NOT NULL, 
	description			VARCHAR(250)
);
CREATE UNIQUE INDEX ind_Personne_Type ON PersonneType (id_pers_type);

CREATE OR REPLACE TABLE Personne
(
	id_personne 		VARCHAR(13) PRIMARY KEY NOT NULL, 
	id_pers_type		INTEGER NOT NULL, 
	password 			VARCHAR(50) NOT NULL, 
	email				VARCHAR(100), 
	sexe				VARCHAR(1), 
	date_anniversaire	DATETIME, 
	rfid				VARCHAR(21),
	CONSTRAINT FOREIGN KEY FK_Personne1 REFERENCES PersonneType (id_pers_type)
);
CREATE INDEX ind_Personne ON Personne (id_personne, id_pers_type); 
CREATE INDEX ind_Personne ON Personne (id_personne, date_anniversaire); 

CREATE OR REPLACE TABLE Promotion
(
	id_promotion 		INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_eleve			VARCHAR(13)	NOT NULL,
	id_professeur		VARCHAR(13) NOT NULL,
	annee				INTEGER NOT NULL,
	CONSTRAINT FK_Promotion_Eleve FOREIGN KEY (id_eleve) REFERENCES Personne (id_personne),
	CONSTRAINT FK_Promotion_Professeur FOREIGN KEY (id_professeur) REFERENCES Personne(id_personne)
);
CREATE INDEX ind_Promotion ON Promotion (id_promotion, id_eleve, id_professeur);

CREATE OR REPLACE Module
(
	id_module 		INTEGER PRIMARY KEY AUTO_INCREMENT, 
	id_promotion 	INTEGER NOT NULL, 
	date_deb		DATE NOT NULL,
	date_fin 		DATE NOT NULL,
	libelle 		VARCHAR(50),
	CONSTRAINT FK_Module_Promotion FOREIGN KEY (id_promotion) REFERENCES Promotion (id_promotion)	
);
CREATE INDEX ind_Module ON Module (id_module, id_promotion);
CREATE INDEX ind_Module2 ON Module (id_module, date_deb, date_fin);

CREATE OR REPLACE Cours
(
	id_cours 		 INTEGER PRIMARY KEY AUTO_INCREMENT,
	id_module		 INTEGER NOT NULL,
	id_salle		 INTEGER NOT NULL,
	id_professeur	 VARCHAR(13) NOT NULL,		
	heure_debut		 DATETIME NOT NULL,
	heure_fin		 DATETIME NOT NULL,
	presentiel		 SMALLINT NOT NULL,
	cours_type 		 VARCHAR(2) NOT NULL,
	commentaire		 VARCHAR(250),
	CONSTRAINT FK_Module FOREIGN KEY (id_module) REFERENCES Module (id_module),
	CONSTRAINT FK_Salle  FOREIGN KEY (id_salle) REFERENCES Salle (id_salle),
	CONSTRAINT FK_Personne_Prof FOREIGN KEY (id_personne_prof) REFERENCES Personne (id_personne)
);
CREATE INDEX ind_Cours ON Cours (id_cours, id_module, id_salle, id_personne_prof);
CREATE INDEX ind_Cours2 ON Cours (id_cours, heure_debut, heure_fin);

CREATE OR REPLACE TABLE Absence 
(
	id_cours	INTEGER NOT NULL, 
	id_personne	VARCHAR(13) NOT NULL, 
	motif 		VARCHAR(250),
	CONSTRAINT PK_Absence PRIMARY KEY (id_cours, id_personne),
	CONSTRAINT FK_Absence_Cours FOREIGN KEY (id_cours) REFERENCES Cours (id_cours),
	CONSTRAINT FK_Absence_Personne  FOREIGN KEY (id_personne) REFERENCES Personne (id_personne)
);
CREATE INDEX ind_Absence ON Absence (id_cours, id_personne);


CREATE OR REPLACE TABLE Presentiel
(
	id_cours	INTEGER NOT NULL, 
	id_personne	VARCHAR(13) NOT NULL, 
	presence	SMALLINT,
	CONSTRAINT PK_Presentiel PRIMARY KEY (id_cours, id_personne),
	CONSTRAINT FK_Presentiel_Cours FOREIGN KEY (id_cours) REFERENCES Cours (id_cours),
	CONSTRAINT FK_Presentiel_Personne FOREIGN KEY (id_personne) REFERENCES Personne (id_personne)
);
CREATE INDEX ind_presentiel ON Presentiel (id_cours, id_personne); 

CREATE OR REPLACE Badgeuse
(
	id_personne VARCHAR(13) NOT NULL, 
	id_salle 	INTEGER NOT NULL,
	date_heure	DATETIME NOT NULL,
	statut  	SMALLINT NOT NULL,
	CONSTRAINT PK_Badgeuse PRIMARY KEY (id_personne, id_salle), 
	CONSTRAINT FK_Badgeuse_Personne FOREIGN KEY (id_personne) REFERENCES (id_personne),
	CONSTRAINT FK_Badgeuse_Salle 	FOREIGN KEY (id_salle) REFERENCES (id_salle)
);
CREATE INDEX ind_badgeuse ON Badgeuse (id_personne, id_salle, date_heure);
