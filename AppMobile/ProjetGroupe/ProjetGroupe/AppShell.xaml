<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:ProjetGroupe.Views"
       Title="ProjetGroupe"
       x:Class="ProjetGroupe.AppShell" FlyoutBackgroundColor="#FFFFFF">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White" />
                <Setter Property="Shell.FlyoutBackgroundColor" Value="White" />
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <Style Class="ListViewCustom" TargetType="DatePicker">
                <Setter Property="BackgroundColor" Value="Red"></Setter>
            </Style>
      
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="white"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>
    
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid BackgroundColor="#96BCE3" Padding="60">
                <Image Source="profil2.png" Margin="-150,0,20,0" WidthRequest="125" HeightRequest="125" HorizontalOptions="Center" VerticalOptions="Center"/>
                <Label Text="Votre nom" TextColor="White" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"/>
            </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>


    <FlyoutItem Icon="accueil.png" Title="Accueil > Navigation">
        <ShellContent Icon="accueil.png" Title="Accueil" ContentTemplate="{DataTemplate local:AccueilPage}" />
        <ShellContent Icon="warning.png" Title="Alerte Covid" ContentTemplate="{DataTemplate local:AccueilPage}" />
        <ShellContent Icon="warning.png" Title="Données Capteurs" ContentTemplate="{DataTemplate local:AccueilPage}" />
        <ShellContent Icon="warning.png" Title="Autres" ContentTemplate="{DataTemplate local:AccueilPage}" />
    </FlyoutItem>
    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->

    <!--<ShellItem Icon="dashboard.png" Title="Navigation">
        <ShellContent Icon="dashboard.png" Title="Navigation" ContentTemplate="{DataTemplate local:AccueilPage}" />
    </ShellItem>-->

    <MenuItem  Icon="warning.png" Text="Alerte Pénurie" StyleClass="MenuItemLayoutStyle" Clicked="OnSmartOfficePageClicked">
    </MenuItem>

    <MenuItem  Icon="warning.png" Text="Alerte E-Covid" StyleClass="MenuItemLayoutStyle" Clicked="OnSmartBuildingPageClicked">
    </MenuItem>
    <MenuItem  Icon="data.png" Text="Consulter les données" StyleClass="MenuItemLayoutStyle" Clicked="OneCovidPageClicked">
    </MenuItem>
    
    <MenuItem Icon="logout.png" Text="Déconnexion" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>
    <!--<ShellItem Route="SmartOfficePage">
        <ShellContent ContentTemplate="{DataTemplate local:SmartOfficePage}" />
    </ShellItem>-->
    <!--<FlyoutItem Title="Connexion" Icon="iut.png">
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </FlyoutItem>-->

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->

    <!--<MenuItem Text="SmartOfficePage" StyleClass="MenuItemLayoutStyle" Clicked="OnSmartOfficePageClicked">
    </MenuItem>-->


    <!--
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>
    <TabBar>
        <ShellContent Route="SmartOfficePage" ContentTemplate="{DataTemplate local:SmartOfficePage}" />
    </TabBar>
    <TabBar>
        <ShellContent  Route="SmartBuildingPage" ContentTemplate="{DataTemplate local:SmartBuildingPage}" />
    </TabBar>
    <TabBar>
        <ShellContent Route="AccueilPage" ContentTemplate="{DataTemplate local:AccueilPage}" />
    </TabBar>-->
    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
